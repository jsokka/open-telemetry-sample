// <auto-generated />
using AuthenticationApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthenticationApi.Migrations
{
    [DbContext(typeof(AuthenticationDbContext))]
    [Migration("20230523170651_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthenticationApi.Entities.ApiKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApiKeys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "DD725D0D9DBB43479B760A0F1C95D43D"
                        });
                });

            modelBuilder.Entity("AuthenticationApi.Entities.ApiKeyTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApiKeyId")
                        .HasColumnType("int");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiKeyId");

                    b.ToTable("ApiKeyTarget");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiKeyId = 1,
                            Target = "TemperatureApi"
                        });
                });

            modelBuilder.Entity("AuthenticationApi.Entities.ApiKeyTarget", b =>
                {
                    b.HasOne("AuthenticationApi.Entities.ApiKey", null)
                        .WithMany("Targets")
                        .HasForeignKey("ApiKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuthenticationApi.Entities.ApiKey", b =>
                {
                    b.Navigation("Targets");
                });
#pragma warning restore 612, 618
        }
    }
}
